//
// File generated by rootcint at Fri Jul 11 19:01:31 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace lattice {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void lattice_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("lattice", 0 /*version*/, "./src/ParticleAction.h", 7,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &lattice_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void lattice_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void latticecLcLActionBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void latticecLcLActionBase_Dictionary();
   static void delete_latticecLcLActionBase(void *p);
   static void deleteArray_latticecLcLActionBase(void *p);
   static void destruct_latticecLcLActionBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lattice::ActionBase*)
   {
      ::lattice::ActionBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lattice::ActionBase),0);
      static ::ROOT::TGenericClassInfo 
         instance("lattice::ActionBase", "./src/ActionBase.h", 12,
                  typeid(::lattice::ActionBase), DefineBehavior(ptr, ptr),
                  0, &latticecLcLActionBase_Dictionary, isa_proxy, 0,
                  sizeof(::lattice::ActionBase) );
      instance.SetDelete(&delete_latticecLcLActionBase);
      instance.SetDeleteArray(&deleteArray_latticecLcLActionBase);
      instance.SetDestructor(&destruct_latticecLcLActionBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lattice::ActionBase*)
   {
      return GenerateInitInstanceLocal((::lattice::ActionBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lattice::ActionBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void latticecLcLActionBase_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lattice::ActionBase*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void latticecLcLField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void latticecLcLField_Dictionary();
   static void delete_latticecLcLField(void *p);
   static void deleteArray_latticecLcLField(void *p);
   static void destruct_latticecLcLField(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lattice::Field*)
   {
      ::lattice::Field *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lattice::Field),0);
      static ::ROOT::TGenericClassInfo 
         instance("lattice::Field", "./src/Field.h", 8,
                  typeid(::lattice::Field), DefineBehavior(ptr, ptr),
                  0, &latticecLcLField_Dictionary, isa_proxy, 0,
                  sizeof(::lattice::Field) );
      instance.SetDelete(&delete_latticecLcLField);
      instance.SetDeleteArray(&deleteArray_latticecLcLField);
      instance.SetDestructor(&destruct_latticecLcLField);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lattice::Field*)
   {
      return GenerateInitInstanceLocal((::lattice::Field*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lattice::Field*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void latticecLcLField_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lattice::Field*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void latticecLcLLatticeSimulation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void latticecLcLLatticeSimulation_Dictionary();
   static void delete_latticecLcLLatticeSimulation(void *p);
   static void deleteArray_latticecLcLLatticeSimulation(void *p);
   static void destruct_latticecLcLLatticeSimulation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lattice::LatticeSimulation*)
   {
      ::lattice::LatticeSimulation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lattice::LatticeSimulation),0);
      static ::ROOT::TGenericClassInfo 
         instance("lattice::LatticeSimulation", "./src/Main.h", 10,
                  typeid(::lattice::LatticeSimulation), DefineBehavior(ptr, ptr),
                  0, &latticecLcLLatticeSimulation_Dictionary, isa_proxy, 0,
                  sizeof(::lattice::LatticeSimulation) );
      instance.SetDelete(&delete_latticecLcLLatticeSimulation);
      instance.SetDeleteArray(&deleteArray_latticecLcLLatticeSimulation);
      instance.SetDestructor(&destruct_latticecLcLLatticeSimulation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lattice::LatticeSimulation*)
   {
      return GenerateInitInstanceLocal((::lattice::LatticeSimulation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lattice::LatticeSimulation*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void latticecLcLLatticeSimulation_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lattice::LatticeSimulation*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void latticecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void latticecLcLParticle_Dictionary();
   static void delete_latticecLcLParticle(void *p);
   static void deleteArray_latticecLcLParticle(void *p);
   static void destruct_latticecLcLParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lattice::Particle*)
   {
      ::lattice::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lattice::Particle),0);
      static ::ROOT::TGenericClassInfo 
         instance("lattice::Particle", "./src/Particle.h", 10,
                  typeid(::lattice::Particle), DefineBehavior(ptr, ptr),
                  0, &latticecLcLParticle_Dictionary, isa_proxy, 0,
                  sizeof(::lattice::Particle) );
      instance.SetDelete(&delete_latticecLcLParticle);
      instance.SetDeleteArray(&deleteArray_latticecLcLParticle);
      instance.SetDestructor(&destruct_latticecLcLParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lattice::Particle*)
   {
      return GenerateInitInstanceLocal((::lattice::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lattice::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void latticecLcLParticle_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lattice::Particle*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrapper around operator delete
   static void delete_latticecLcLLatticeSimulation(void *p) {
      delete ((::lattice::LatticeSimulation*)p);
   }
   static void deleteArray_latticecLcLLatticeSimulation(void *p) {
      delete [] ((::lattice::LatticeSimulation*)p);
   }
   static void destruct_latticecLcLLatticeSimulation(void *p) {
      typedef ::lattice::LatticeSimulation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lattice::LatticeSimulation

namespace ROOT {
   // Wrapper around operator delete
   static void delete_latticecLcLParticle(void *p) {
      delete ((::lattice::Particle*)p);
   }
   static void deleteArray_latticecLcLParticle(void *p) {
      delete [] ((::lattice::Particle*)p);
   }
   static void destruct_latticecLcLParticle(void *p) {
      typedef ::lattice::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lattice::Particle

namespace ROOT {
   // Wrapper around operator delete
   static void delete_latticecLcLField(void *p) {
      delete ((::lattice::Field*)p);
   }
   static void deleteArray_latticecLcLField(void *p) {
      delete [] ((::lattice::Field*)p);
   }
   static void destruct_latticecLcLField(void *p) {
      typedef ::lattice::Field current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lattice::Field

namespace ROOT {
   // Wrapper around operator delete
   static void delete_latticecLcLActionBase(void *p) {
      delete ((::lattice::ActionBase*)p);
   }
   static void deleteArray_latticecLcLActionBase(void *p) {
      delete [] ((::lattice::ActionBase*)p);
   }
   static void destruct_latticecLcLActionBase(void *p) {
      typedef ::lattice::ActionBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lattice::ActionBase

/********************************************************
* src/Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("src/ActionBase.h");
  G__add_compiledheader("src/Coordinate.h");
  G__add_compiledheader("src/Field.h");
  G__add_compiledheader("src/FieldAction.h");
  G__add_compiledheader("src/Main.h");
  G__add_compiledheader("src/Particle.h");
  G__add_compiledheader("src/ParticleAction.h");
  G__add_compiledheader("src/PhysicsBase.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* lattice */
static int G__Dict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lattice::getAction((const char*) G__int(libp->para[0]), (lattice::PhysicsBase*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* lattice::ActionBase */
static int G__Dict_442_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const lattice::ActionBase*) G__getstructoffset())->getObj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_442_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const lattice::ActionBase*) G__getstructoffset())->eval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_442_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::ActionBase*) G__getstructoffset())->setParameter((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lattice::ActionBase G__TlatticecLcLActionBase;
static int G__Dict_442_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lattice::ActionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lattice::ActionBase*) (soff+(sizeof(lattice::ActionBase)*i)))->~G__TlatticecLcLActionBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lattice::ActionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lattice::ActionBase*) (soff))->~G__TlatticecLcLActionBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_442_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::ActionBase* dest = (lattice::ActionBase*) G__getstructoffset();
   *dest = *(lattice::ActionBase*) libp->para[0].ref;
   const lattice::ActionBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lattice::Field */
// automatic destructor
typedef lattice::Field G__TlatticecLcLField;
static int G__Dict_452_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lattice::Field*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lattice::Field*) (soff+(sizeof(lattice::Field)*i)))->~G__TlatticecLcLField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lattice::Field*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lattice::Field*) (soff))->~G__TlatticecLcLField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_452_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::Field* dest = (lattice::Field*) G__getstructoffset();
   *dest = *(lattice::Field*) libp->para[0].ref;
   const lattice::Field& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lattice::LatticeSimulation */
static int G__Dict_454_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::LatticeSimulation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new lattice::LatticeSimulation((lattice::ActionBase*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) lattice::LatticeSimulation((lattice::ActionBase*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setNSweeps((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setThermalizationWait((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setFillInterval((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setFluctuationSize((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setOutputName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_454_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lattice::LatticeSimulation*) G__getstructoffset())->setSeed((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_454_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lattice::LatticeSimulation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lattice::LatticeSimulation(*(lattice::LatticeSimulation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lattice::LatticeSimulation G__TlatticecLcLLatticeSimulation;
static int G__Dict_454_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lattice::LatticeSimulation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lattice::LatticeSimulation*) (soff+(sizeof(lattice::LatticeSimulation)*i)))->~G__TlatticecLcLLatticeSimulation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lattice::LatticeSimulation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lattice::LatticeSimulation*) (soff))->~G__TlatticecLcLLatticeSimulation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_454_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::LatticeSimulation* dest = (lattice::LatticeSimulation*) G__getstructoffset();
   *dest = *(lattice::LatticeSimulation*) libp->para[0].ref;
   const lattice::LatticeSimulation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lattice::Particle */
static int G__Dict_455_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new lattice::Particle(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) lattice::Particle(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_latticecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_455_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lattice::Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lattice::Particle(*(lattice::Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_latticecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lattice::Particle G__TlatticecLcLParticle;
static int G__Dict_455_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lattice::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lattice::Particle*) (soff+(sizeof(lattice::Particle)*i)))->~G__TlatticecLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lattice::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lattice::Particle*) (soff))->~G__TlatticecLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_455_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lattice::Particle* dest = (lattice::Particle*) G__getstructoffset();
   *dest = *(lattice::Particle*) libp->para[0].ref;
   const lattice::Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* lattice */

/* lattice::ActionBase */

/* lattice::Field */

/* lattice::LatticeSimulation */

/* lattice::Particle */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_latticecLcLField))) {
     lattice::Field *G__Lderived;
     G__Lderived=(lattice::Field*)0x1000;
     {
       lattice::PhysicsBase *G__Lpbase=(lattice::PhysicsBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLField),G__get_linked_tagnum(&G__DictLN_latticecLcLPhysicsBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_latticecLcLParticle))) {
     lattice::Particle *G__Lderived;
     G__Lderived=(lattice::Particle*)0x1000;
     {
       lattice::PhysicsBase *G__Lpbase=(lattice::PhysicsBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLParticle),G__get_linked_tagnum(&G__DictLN_latticecLcLPhysicsBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Coordinate,double>",117,G__get_linked_tagnum(&G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<lattice::Coordinate,double>",117,G__get_linked_tagnum(&G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<lattice::Coordinate,double,less<lattice::Coordinate> >",117,G__get_linked_tagnum(&G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ValueMap>",117,G__get_linked_tagnum(&G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,const FactoryBase*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,const lattice::ActionFactoryStore::FactoryBase*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,const lattice::ActionFactoryStore::FactoryBase*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* lattice */
static void G__setup_memvarlattice(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_lattice));
   {
   }
   G__tag_memvar_reset();
}


   /* lattice::ActionBase */
static void G__setup_memvarlatticecLcLActionBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLActionBase));
   { lattice::ActionBase *p; p=(lattice::ActionBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_latticecLcLPhysicsBase),-1,-1,2,"obj_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lattice::Field */
static void G__setup_memvarlatticecLcLField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLField));
   { lattice::Field *p; p=(lattice::Field*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* lattice::LatticeSimulation */
static void G__setup_memvarlatticecLcLLatticeSimulation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation));
   { lattice::LatticeSimulation *p; p=(lattice::LatticeSimulation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_latticecLcLActionBase),-1,-1,4,"L_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nSweeps_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nTherm_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fillInterval_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"df_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"outputName_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"seed_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lattice::Particle */
static void G__setup_memvarlatticecLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLParticle));
   { lattice::Particle *p; p=(lattice::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nT_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nD_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunclattice(void) {
   /* lattice */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_lattice));
   G__memfunc_setup("getAction",926,G__Dict_162_0_1, 85, G__get_linked_tagnum(&G__DictLN_latticecLcLActionBase), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'lattice::PhysicsBase' - 0 - -", (char*)NULL, (void*) G__func2void( (lattice::ActionBase* (*)(const char*, lattice::PhysicsBase*))(&lattice::getAction) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclatticecLcLActionBase(void) {
   /* lattice::ActionBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLActionBase));
   G__memfunc_setup("getObj",603,G__Dict_442_0_2, 85, G__get_linked_tagnum(&G__DictLN_latticecLcLPhysicsBase), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eval",424,G__Dict_442_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("setParameter",1261,G__Dict_442_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~ActionBase", 1111, G__Dict_442_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_442_0_6, (int) ('u'), G__get_linked_tagnum(&G__DictLN_latticecLcLActionBase), -1, 1, 1, 1, 1, 0, "u 'lattice::ActionBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclatticecLcLField(void) {
   /* lattice::Field */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLField));
   // automatic destructor
   G__memfunc_setup("~Field", 610, G__Dict_452_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_452_0_3, (int) ('u'), G__get_linked_tagnum(&G__DictLN_latticecLcLField), -1, 1, 1, 1, 1, 0, "u 'lattice::Field' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclatticecLcLLatticeSimulation(void) {
   /* lattice::LatticeSimulation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation));
   G__memfunc_setup("LatticeSimulation",1771,G__Dict_454_0_1, 105, G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation), -1, 0, 1, 1, 1, 0, "U 'lattice::ActionBase' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__Dict_454_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSweeps",1041,G__Dict_454_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setThermalizationWait",2220,G__Dict_454_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFillInterval",1560,G__Dict_454_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFluctuationSize",1909,G__Dict_454_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutputName",1374,G__Dict_454_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - _name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeed",717,G__Dict_454_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _s", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("LatticeSimulation", 1771, G__Dict_454_0_9, (int) ('i'), G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation), -1, 0, 1, 1, 1, 0, "u 'lattice::LatticeSimulation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LatticeSimulation", 1897, G__Dict_454_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_454_0_11, (int) ('u'), G__get_linked_tagnum(&G__DictLN_latticecLcLLatticeSimulation), -1, 1, 1, 1, 1, 0, "u 'lattice::LatticeSimulation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclatticecLcLParticle(void) {
   /* lattice::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_latticecLcLParticle));
   G__memfunc_setup("Particle",820,G__Dict_455_0_1, 105, G__get_linked_tagnum(&G__DictLN_latticecLcLParticle), -1, 0, 3, 1, 1, 0, 
"h - - 0 - - h - - 0 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDerivative",1363,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"u 'lattice::Coordinate' - 41 - - h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCoord",823,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_latticecLcLCoordinate), -1, 0, 1, 1, 1, 8, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Particle", 820, G__Dict_455_0_4, (int) ('i'), G__get_linked_tagnum(&G__DictLN_latticecLcLParticle), -1, 0, 1, 1, 1, 0, "u 'lattice::Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__Dict_455_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_455_0_6, (int) ('u'), G__get_linked_tagnum(&G__DictLN_latticecLcLParticle), -1, 1, 1, 1, 1, 0, "u 'lattice::Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_lattice = { "lattice" , 110 , -1 };
G__linked_taginfo G__DictLN_latticecLcLCoordinate = { "lattice::Coordinate" , 99 , -1 };
G__linked_taginfo G__DictLN_latticecLcLPhysicsBase = { "lattice::PhysicsBase" , 99 , -1 };
G__linked_taginfo G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR = { "map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR = { "vector<map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > >,allocator<map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > >,allocator<map<lattice::Coordinate,double,less<lattice::Coordinate>,allocator<pair<const lattice::Coordinate,double> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_latticecLcLActionBase = { "lattice::ActionBase" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR = { "map<string,const lattice::ActionFactoryStore::FactoryBase*,less<string>,allocator<pair<const string,const lattice::ActionFactoryStore::FactoryBase*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_latticecLcLField = { "lattice::Field" , 99 , -1 };
G__linked_taginfo G__DictLN_latticecLcLLatticeSimulation = { "lattice::LatticeSimulation" , 99 , -1 };
G__linked_taginfo G__DictLN_latticecLcLParticle = { "lattice::Particle" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_lattice.tagnum = -1 ;
  G__DictLN_latticecLcLCoordinate.tagnum = -1 ;
  G__DictLN_latticecLcLPhysicsBase.tagnum = -1 ;
  G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_latticecLcLActionBase.tagnum = -1 ;
  G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_latticecLcLField.tagnum = -1 ;
  G__DictLN_latticecLcLLatticeSimulation.tagnum = -1 ;
  G__DictLN_latticecLcLParticle.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_lattice),0,-1,0,(char*)NULL,G__setup_memvarlattice,G__setup_memfunclattice);
   G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLCoordinate);
   G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLPhysicsBase);
   G__get_linked_tagnum_fwd(&G__DictLN_maplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRcOallocatorlEmaplElatticecLcLCoordinatecOdoublecOlesslElatticecLcLCoordinategRcOallocatorlEpairlEconstsPlatticecLcLCoordinatecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLActionBase),sizeof(lattice::ActionBase),-1,33793,(char*)NULL,G__setup_memvarlatticecLcLActionBase,G__setup_memfunclatticecLcLActionBase);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOconstsPlatticecLcLActionFactoryStorecLcLFactoryBasemUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLField),sizeof(lattice::Field),-1,33793,(char*)NULL,G__setup_memvarlatticecLcLField,G__setup_memfunclatticecLcLField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLLatticeSimulation),sizeof(lattice::LatticeSimulation),-1,33792,(char*)NULL,G__setup_memvarlatticecLcLLatticeSimulation,G__setup_memfunclatticecLcLLatticeSimulation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_latticecLcLParticle),sizeof(lattice::Particle),-1,33792,(char*)NULL,G__setup_memvarlatticecLcLParticle,G__setup_memfunclatticecLcLParticle);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

